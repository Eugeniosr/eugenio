name: Docker Image CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v4
    - name: Login to Scaleway Container Registry
      uses: docker/login-action@v3
      with:
        username: nologin
        password: ${{ secrets.SCALEWAY_API_KEY }}
        registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}

    #Upload docker-compose.yml to server scaleway
    - name: Upload docker-compose.yml to Scaleway
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SCALEWAY_SERVER_IP }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: './docker-compose.yml'
        target: '/home/{{ secrets.SSH_USER }}/eugene/'


   # Build and push the backend Docker image
    - name: Build the Backend Docker image
      run: docker build ./backend -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backendtest
    - name: Push the backend Docker Image
      run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backendtest

  # Build and push the frontend Docker image
    - name: Build the Frontend Docker image
      run: docker build ./frontend -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontendtest
    - name: Push the Frontend Docker Image
      run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontendtest


  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - uses: actions/checkout@v4

      # SSH into the Scaleway server
      - name: Deploy to Scaleway server via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SCALEWAY_SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22

          # Run commands on the remote server
          script: |
            
            cd /home/{{ secrets.SSH_USER }}/eugene
            
            # Stop the container backend if running
            docker stop backendtest || true
            docker rm backendtest || true
           
            # Pull the latest Docker image from the registry
            docker pull ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backendtest:latest

            # Run the  container backend
            docker run -d --name backendtest -p 8000:8000 ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/backendtest:latest
            
            # Stop the container frontend if running
            docker stop frontendtest || true
            docker rm frontendtest || true
           
            # Pull the latest Docker image from the registry
            docker pull ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontendtest:latest

            # Run the new container
            docker run -d --name frontendtest -p 8080:8080 ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/frontendtest:latest



    # - uses: actions/checkout@v4
    # - name: Build the Docker image
    #   run: docker build . --file Dockerfile --tag zach27/atut-bootcamp:v1
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     ecr: auto
    #     logout: true
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
    # - name: Extract metadata (labels, tags, etc.) for Docker
    #   id: meta
    #   uses: docker/metadata-action@v5
    #   with:
    #     images: zach27/atut-bootcamp:v0
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v5
    #   with:
    #       context: .
    #       file: ./Dockerfile
    #       push: true
    #       tags: zach27/atut-bootcamp:v1
    #       labels: ${{ steps.meta.outputs.labels }}

    
